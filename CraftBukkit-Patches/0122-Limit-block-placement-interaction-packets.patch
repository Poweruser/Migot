From 2b6ef7bbe24544e2c371624f0652ca5601832eb2 Mon Sep 17 00:00:00 2001
From: Thinkofdeath <thinkofdeath@spigotmc.org>
Date: Sun, 29 Jun 2014 21:10:34 +0100
Subject: [PATCH] Limit block placement/interaction packets


diff --git a/src/main/java/net/minecraft/server/PacketPlayInArmAnimation.java b/src/main/java/net/minecraft/server/PacketPlayInArmAnimation.java
index c611db1..28cb5e3 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInArmAnimation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInArmAnimation.java
@@ -4,9 +4,13 @@ import java.io.IOException;
 
 public class PacketPlayInArmAnimation implements Packet<PacketListenerPlayIn> {
 
+    public long timestamp; // Spigot
+
     public PacketPlayInArmAnimation() {}
 
-    public void a(PacketDataSerializer packetdataserializer) throws IOException {}
+    public void a(PacketDataSerializer packetdataserializer) throws IOException {
+        timestamp = System.currentTimeMillis(); // Spigot
+    }
 
     public void b(PacketDataSerializer packetdataserializer) throws IOException {}
 
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 6e112b3..bca1058 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -651,9 +651,22 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
         // CraftBukkit end
     }
 
+    // Spigot start - limit place/interactions
+    private long lastPlace = -1;
+    private int packets = 0;
+
     public void a(PacketPlayInBlockPlace packetplayinblockplace) {
         PlayerConnectionUtils.ensureMainThread(packetplayinblockplace, this, this.player.u());
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
+        boolean throttled = false;
+        if (lastPlace != -1 && packetplayinblockplace.timestamp - lastPlace < 30 && packets++ >= 4) {
+            throttled = true;
+        } else if ( packetplayinblockplace.timestamp - lastPlace >= 30 || lastPlace == -1 )
+        {
+            lastPlace = packetplayinblockplace.timestamp;
+            packets = 0;
+        }
+    // Spigot end
 
         // CraftBukkit start
         if (this.player.dead) return;
@@ -677,7 +690,8 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
             // CraftBukkit start
             int itemstackAmount = itemstack.count;
-
+            // Spigot start - skip the event if throttled
+            if (!throttled) {            
             // Raytrace to look for 'rogue armswings'
             float f1 = this.player.pitch;
             float f2 = this.player.yaw;
@@ -713,6 +727,8 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
             if (!cancelled) {
                 this.player.playerInteractManager.useItem(this.player, this.player.world, itemstack);
             }
+            }
+            // Spigot end
 
             // CraftBukkit - notch decrements the counter by 1 in the above method with food,
             // snowballs and so forth, but he does it in a place that doesn't cause the
@@ -738,7 +754,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
             }
 
             if (this.checkMovement && this.player.e((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D) < 64.0D && !this.minecraftServer.a(worldserver, blockposition, this.player) && worldserver.getWorldBorder().a(blockposition)) {
-                always = !this.player.playerInteractManager.interact(this.player, worldserver, itemstack, blockposition, enumdirection, packetplayinblockplace.d(), packetplayinblockplace.e(), packetplayinblockplace.f());
+                always = throttled || !this.player.playerInteractManager.interact(this.player, worldserver, itemstack, blockposition, enumdirection, packetplayinblockplace.d(), packetplayinblockplace.e(), packetplayinblockplace.f());
             }
 
             flag = true;
-- 
2.1.4

